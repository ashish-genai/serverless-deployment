{
 "Resources": {
  "Users0A0EEA89": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/Users/Resource"
   }
  },
  "Assets9A31D427": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "department",
      "AttributeType": "S"
     },
     {
      "AttributeName": "name",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "department-index",
      "KeySchema": [
       {
        "AttributeName": "department",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "name",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "department",
      "KeyType": "RANGE"
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/Assets/Resource"
   }
  },
  "OrdersA9B65338": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "created_at",
      "AttributeType": "S"
     },
     {
      "AttributeName": "created_by",
      "AttributeType": "S"
     },
     {
      "AttributeName": "asset_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "created_by-index",
      "KeySchema": [
       {
        "AttributeName": "created_by",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "created_at",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "asset-id-index",
      "KeySchema": [
       {
        "AttributeName": "asset_id",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "created_at",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "created_at",
      "KeyType": "RANGE"
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/Orders/Resource"
   }
  },
  "StaticAssetsDDEE9873": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/StaticAssets/Resource"
   }
  },
  "StaticAssetsPolicy88A634B0": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "StaticAssetsDDEE9873"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "StaticAssetsDDEE9873",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StaticAssetsDDEE9873",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "AssetManagementDistributionOrigin1S3Origin6E76010C",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "StaticAssetsDDEE9873",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/StaticAssets/Policy/Resource"
   }
  },
  "AssetManagementUserPool8689EC8B": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AliasAttributes": [
     "email"
    ],
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementUserPool/Resource"
   }
  },
  "AssetManagementUserPoolappclient21781F3E": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "openid"
    ],
    "CallbackURLs": [
     "https://prod.yourdomain.com/callback"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "AssetManagementUserPool8689EC8B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementUserPool/app-client/Resource"
   }
  },
  "DependenciesLayerDF300E31": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4829e705d5b49a3c711024fabbc1cd49958e8c041a779e18238a3fddc4c7ae16.zip"
    },
    "Description": "Common dependencies for Lambda functions"
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/DependenciesLayer/Resource",
    "aws:asset:path": "../asset.4829e705d5b49a3c711024fabbc1cd49958e8c041a779e18238a3fddc4c7ae16",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "AuthFunctionServiceRole87A7A68C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AuthFunction/ServiceRole/Resource"
   }
  },
  "AuthFunctionServiceRoleDefaultPolicy4198AD5B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Users0A0EEA89",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AuthFunctionServiceRoleDefaultPolicy4198AD5B",
    "Roles": [
     {
      "Ref": "AuthFunctionServiceRole87A7A68C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AuthFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AuthFunctionA1CD5E0F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c5214f036baa158f84c6a7abd79bffa6cfcf51263144cc6d87a4e72032686f5a.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "AssetManagementUserPool8689EC8B"
      },
      "CLIENT_ID": {
       "Ref": "AssetManagementUserPoolappclient21781F3E"
      },
      "USERS_TABLE": {
       "Ref": "Users0A0EEA89"
      },
      "ASSETS_TABLE": {
       "Ref": "Assets9A31D427"
      },
      "ORDERS_TABLE": {
       "Ref": "OrdersA9B65338"
      }
     }
    },
    "Handler": "app.handler.handler",
    "Layers": [
     {
      "Ref": "DependenciesLayerDF300E31"
     }
    ],
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "AuthFunctionServiceRole87A7A68C",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "AuthFunctionServiceRoleDefaultPolicy4198AD5B",
    "AuthFunctionServiceRole87A7A68C"
   ],
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AuthFunction/Resource",
    "aws:asset:path": "../asset.c5214f036baa158f84c6a7abd79bffa6cfcf51263144cc6d87a4e72032686f5a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AssetFunctionServiceRole56F1AE3D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetFunction/ServiceRole/Resource"
   }
  },
  "AssetFunctionServiceRoleDefaultPolicy52897A6B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Assets9A31D427",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Assets9A31D427",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AssetFunctionServiceRoleDefaultPolicy52897A6B",
    "Roles": [
     {
      "Ref": "AssetFunctionServiceRole56F1AE3D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AssetFunctionA633A7D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "eca5d96147727900cae6c8a8361012ce115b86fc47d21e6bcb2f808aff6914b7.zip"
    },
    "Environment": {
     "Variables": {
      "ASSETTABLE": {
       "Ref": "Assets9A31D427"
      }
     }
    },
    "Handler": "app.handler.handler",
    "Layers": [
     {
      "Ref": "DependenciesLayerDF300E31"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "AssetFunctionServiceRole56F1AE3D",
      "Arn"
     ]
    },
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "AssetFunctionServiceRoleDefaultPolicy52897A6B",
    "AssetFunctionServiceRole56F1AE3D"
   ],
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetFunction/Resource",
    "aws:asset:path": "../asset.eca5d96147727900cae6c8a8361012ce115b86fc47d21e6bcb2f808aff6914b7",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "OrderFunctionServiceRole3E66F569": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/OrderFunction/ServiceRole/Resource"
   }
  },
  "OrderFunctionServiceRoleDefaultPolicyC38EDEDD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrdersA9B65338",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrdersA9B65338",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Assets9A31D427",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "Assets9A31D427",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OrderFunctionServiceRoleDefaultPolicyC38EDEDD",
    "Roles": [
     {
      "Ref": "OrderFunctionServiceRole3E66F569"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/OrderFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OrderFunctionFABF799C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "eca5d96147727900cae6c8a8361012ce115b86fc47d21e6bcb2f808aff6914b7.zip"
    },
    "Environment": {
     "Variables": {
      "ORDERTABLE": {
       "Ref": "OrdersA9B65338"
      },
      "ASSETTABLE": {
       "Ref": "Assets9A31D427"
      }
     }
    },
    "Handler": "app.handler.handler",
    "Layers": [
     {
      "Ref": "DependenciesLayerDF300E31"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "OrderFunctionServiceRole3E66F569",
      "Arn"
     ]
    },
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "OrderFunctionServiceRoleDefaultPolicyC38EDEDD",
    "OrderFunctionServiceRole3E66F569"
   ],
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/OrderFunction/Resource",
    "aws:asset:path": "../asset.eca5d96147727900cae6c8a8361012ce115b86fc47d21e6bcb2f808aff6914b7",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AssetManagementAPI0C4A8900": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "AssetManagementAPI"
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Resource"
   }
  },
  "AssetManagementAPICloudWatchRoleAF954F23": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/CloudWatchRole/Resource"
   }
  },
  "AssetManagementAPIAccountEFFEDCB7": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "AssetManagementAPICloudWatchRoleAF954F23",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AssetManagementAPI0C4A8900"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Account"
   }
  },
  "AssetManagementAPIDeployment8C4671F27d37315db63879cf31b651b43b9208e0": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "DependsOn": [
    "AssetManagementAPIassetsGET5066EAC5",
    "AssetManagementAPIassetsOPTIONSF0BF5026",
    "AssetManagementAPIassetsPOST7A80C15A",
    "AssetManagementAPIassets6FD3ADB7",
    "AssetManagementAPIauthOPTIONS67654BAA",
    "AssetManagementAPIauthPOST4413DBEC",
    "AssetManagementAPIauth9EF735D2",
    "AssetManagementAPIOPTIONS2AF69A4D",
    "AssetManagementAPIordersGETA9604A32",
    "AssetManagementAPIordersOPTIONSE44DB8AC",
    "AssetManagementAPIordersPOSTD448C139",
    "AssetManagementAPIorders70EF6C24"
   ],
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Deployment/Resource"
   }
  },
  "AssetManagementAPIDeploymentStageprod787F01D7": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AssetManagementAPIDeployment8C4671F27d37315db63879cf31b651b43b9208e0"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "AssetManagementAPIAccountEFFEDCB7"
   ],
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/DeploymentStage.prod/Resource"
   }
  },
  "AssetManagementAPIOPTIONS2AF69A4D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AssetManagementAPI0C4A8900",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/OPTIONS/Resource"
   }
  },
  "AssetManagementAPIauth9EF735D2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AssetManagementAPI0C4A8900",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/auth/Resource"
   }
  },
  "AssetManagementAPIauthOPTIONS67654BAA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AssetManagementAPIauth9EF735D2"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/auth/OPTIONS/Resource"
   }
  },
  "AssetManagementAPIauthPOSTApiPermissionAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BPOSTauth17B6FAA2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthFunctionA1CD5E0F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/",
       {
        "Ref": "AssetManagementAPIDeploymentStageprod787F01D7"
       },
       "/POST/auth"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/auth/POST/ApiPermission.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.POST..auth"
   }
  },
  "AssetManagementAPIauthPOSTApiPermissionTestAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BPOSTauth9A6D29CA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthFunctionA1CD5E0F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/test-invoke-stage/POST/auth"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/auth/POST/ApiPermission.Test.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.POST..auth"
   }
  },
  "AssetManagementAPIauthPOST4413DBEC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthFunctionA1CD5E0F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AssetManagementAPIauth9EF735D2"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/auth/POST/Resource"
   }
  },
  "AssetManagementAPIassets6FD3ADB7": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AssetManagementAPI0C4A8900",
      "RootResourceId"
     ]
    },
    "PathPart": "assets",
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/Resource"
   }
  },
  "AssetManagementAPIassetsOPTIONSF0BF5026": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AssetManagementAPIassets6FD3ADB7"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/OPTIONS/Resource"
   }
  },
  "AssetManagementAPIassetsGETApiPermissionAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BGETassetsCD8B6023": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AssetFunctionA633A7D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/",
       {
        "Ref": "AssetManagementAPIDeploymentStageprod787F01D7"
       },
       "/GET/assets"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/GET/ApiPermission.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.GET..assets"
   }
  },
  "AssetManagementAPIassetsGETApiPermissionTestAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BGETassets5FF14E59": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AssetFunctionA633A7D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/test-invoke-stage/GET/assets"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/GET/ApiPermission.Test.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.GET..assets"
   }
  },
  "AssetManagementAPIassetsGET5066EAC5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "AssetManagementAuthorizer68BC9A04"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AssetFunctionA633A7D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AssetManagementAPIassets6FD3ADB7"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/GET/Resource"
   }
  },
  "AssetManagementAPIassetsPOSTApiPermissionAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BPOSTassetsF13C835A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AssetFunctionA633A7D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/",
       {
        "Ref": "AssetManagementAPIDeploymentStageprod787F01D7"
       },
       "/POST/assets"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/POST/ApiPermission.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.POST..assets"
   }
  },
  "AssetManagementAPIassetsPOSTApiPermissionTestAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BPOSTassets5AFD296A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AssetFunctionA633A7D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/test-invoke-stage/POST/assets"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/POST/ApiPermission.Test.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.POST..assets"
   }
  },
  "AssetManagementAPIassetsPOST7A80C15A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "AssetManagementAuthorizer68BC9A04"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AssetFunctionA633A7D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AssetManagementAPIassets6FD3ADB7"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/assets/POST/Resource"
   }
  },
  "AssetManagementAPIorders70EF6C24": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AssetManagementAPI0C4A8900",
      "RootResourceId"
     ]
    },
    "PathPart": "orders",
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/Resource"
   }
  },
  "AssetManagementAPIordersOPTIONSE44DB8AC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AssetManagementAPIorders70EF6C24"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/OPTIONS/Resource"
   }
  },
  "AssetManagementAPIordersGETApiPermissionAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BGETorders19F74A76": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderFunctionFABF799C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/",
       {
        "Ref": "AssetManagementAPIDeploymentStageprod787F01D7"
       },
       "/GET/orders"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/GET/ApiPermission.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.GET..orders"
   }
  },
  "AssetManagementAPIordersGETApiPermissionTestAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BGETordersB055824D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderFunctionFABF799C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/test-invoke-stage/GET/orders"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/GET/ApiPermission.Test.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.GET..orders"
   }
  },
  "AssetManagementAPIordersGETA9604A32": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "AssetManagementAuthorizer68BC9A04"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrderFunctionFABF799C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AssetManagementAPIorders70EF6C24"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/GET/Resource"
   }
  },
  "AssetManagementAPIordersPOSTApiPermissionAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BPOSTordersA3747E5D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderFunctionFABF799C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/",
       {
        "Ref": "AssetManagementAPIDeploymentStageprod787F01D7"
       },
       "/POST/orders"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/POST/ApiPermission.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.POST..orders"
   }
  },
  "AssetManagementAPIordersPOSTApiPermissionTestAssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611BPOSTorders91F975F3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrderFunctionFABF799C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AssetManagementAPI0C4A8900"
       },
       "/test-invoke-stage/POST/orders"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/POST/ApiPermission.Test.AssetManagementPipelineProductionAssetManagementAssetManagementAPIA47B611B.POST..orders"
   }
  },
  "AssetManagementAPIordersPOSTD448C139": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "AssetManagementAuthorizer68BC9A04"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrderFunctionFABF799C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AssetManagementAPIorders70EF6C24"
    },
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAPI/Default/orders/POST/Resource"
   }
  },
  "AssetManagementAuthorizer68BC9A04": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "AssetManagementPipelineProductionAssetManagementAssetManagementAuthorizer662380D5",
    "ProviderARNs": [
     {
      "Fn::GetAtt": [
       "AssetManagementUserPool8689EC8B",
       "Arn"
      ]
     }
    ],
    "RestApiId": {
     "Ref": "AssetManagementAPI0C4A8900"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementAuthorizer/Resource"
   }
  },
  "AssetManagementDistributionOrigin1S3Origin6E76010C": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Identity for AssetManagementPipelineProductionAssetManagementAssetManagementDistributionOrigin1E619AFC8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementDistribution/Origin1/S3Origin/Resource"
   }
  },
  "AssetManagementDistributionB527999B": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "AssetManagementPipelineProductionAssetManagementAssetManagementDistributionOrigin1E619AFC8",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "StaticAssetsDDEE9873",
         "RegionalDomainName"
        ]
       },
       "Id": "AssetManagementPipelineProductionAssetManagementAssetManagementDistributionOrigin1E619AFC8",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "AssetManagementDistributionOrigin1S3Origin6E76010C"
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/AssetManagementDistribution/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VQy07DMBD8lt5dIygCcUxbVUICNSqPa+XY27DUsSM/VIUo/44fKWkPnHZ2d9aemTt6+7ig9zN2snMujnOJFe3fHONHEkb7XnSKNVqE4TurJJDVQSUwELug/dLzI7g4HFEupZbIu2k89rlZMhuuua4VOk37Dwum1FpG9h8+g5VEUO5ylScDkaypBKP9C+vAfIKxqFXkXfUbr7gbF5e4BNOgjZRoY8+sBWdpEQtB1tB+p7PVVCc3GQ2EtVgzByfWBSpYV7SY2BMsONc+KF9DK3XXjCYuuhBxnb7IIJxqbzjEcMgruC8t4nJE5+34yYhzgudgbOED1+APmCTgrwtZS+3FwWjlaL9G6wxWPkWxNVhj1ArWPosgC13yuYoHm3jwH+PymWGYBKYMoyVUdeRtvWu9u9Yd3tdKYDolZRd0qpsFfaIPs2+LODchN2yA7nL9BZWdrw2hAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "AssetManagementPipeline/Production/AssetManagement/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "AssetManagementAPIEndpointDB12A245": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AssetManagementAPI0C4A8900"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AssetManagementAPIDeploymentStageprod787F01D7"
      },
      "/"
     ]
    ]
   }
  },
  "APIUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AssetManagementAPI0C4A8900"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AssetManagementAPIDeploymentStageprod787F01D7"
      },
      "/"
     ]
    ]
   }
  },
  "UserPoolId": {
   "Value": {
    "Ref": "AssetManagementUserPool8689EC8B"
   }
  },
  "ClientId": {
   "Value": {
    "Ref": "AssetManagementUserPoolappclient21781F3E"
   }
  },
  "DistributionDomain": {
   "Value": {
    "Fn::GetAtt": [
     "AssetManagementDistributionB527999B",
     "DomainName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}